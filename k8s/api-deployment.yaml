apiVersion: v1
kind: Namespace
metadata:
  name: awasome-api
  labels:
    app: awasome-api
    environment: production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: awasome-api-config
  namespace: awasome-api
data:
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  COUCHDB_URL: "http://couchdb-service:5984"
  COUCHDB_DATABASE: "awasome_db"
  ACCESS_TOKEN_EXPIRE_MINUTES: "30"
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "60"
  CORS_ORIGINS: "https://yourdomain.com"
---
apiVersion: v1
kind: Secret
metadata:
  name: awasome-api-secret
  namespace: awasome-api
type: Opaque
data:
  # Base64 encoded values - change these in production!
  SECRET_KEY: eW91ci1zZWNyZXQta2V5LWNoYW5nZS1pbi1wcm9kdWN0aW9u # your-secret-key-change-in-production
  COUCHDB_USERNAME: YWRtaW4= # admin
  COUCHDB_PASSWORD: cGFzc3dvcmQ= # password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: awasome-api
  namespace: awasome-api
  labels:
    app: awasome-api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: awasome-api
  template:
    metadata:
      labels:
        app: awasome-api
    spec:
      containers:
      - name: api
        image: awasome-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: awasome-api-secret
              key: SECRET_KEY
        - name: COUCHDB_USERNAME
          valueFrom:
            secretKeyRef:
              name: awasome-api-secret
              key: COUCHDB_USERNAME
        - name: COUCHDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: awasome-api-secret
              key: COUCHDB_PASSWORD
        envFrom:
        - configMapRef:
            name: awasome-api-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/system/health/live
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/system/health/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: awasome-api-service
  namespace: awasome-api
  labels:
    app: awasome-api
spec:
  selector:
    app: awasome-api
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: awasome-api-ingress
  namespace: awasome-api
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.yourdomain.com
    secretName: awasome-api-tls
  rules:
  - host: api.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: awasome-api-service
            port:
              number: 80